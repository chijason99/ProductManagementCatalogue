@using ProductManagementCatalogue.Application.Dtos.Products;
@model ProductDto

<div>
    <h4>@Model.Name</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Id)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.Stock)
        </dt>
        <dd class="col-sm-9">
            @Html.DisplayFor(model => model.Stock)
        </dd>

        <dt class="col-sm-3">
            @Html.DisplayNameFor(model => model.IsActive)
        </dt>
        <dd class="col-sm-9">
            @if (Model.IsActive)
            {
                    <span class="badge bg-success">Active</span>
            }
            else
            {
                    <span class="badge bg-secondary">Inactive</span>
            }
        </dd>
    </dl>
</div>

<div class="mt-3">
    <a asp-action="Update" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
    <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
</div>