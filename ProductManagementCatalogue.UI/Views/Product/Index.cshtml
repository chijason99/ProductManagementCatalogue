@using ProductManagementCatalogue.Application.ViewModels

@model ProductIndexViewModel

<form asp-action="Index" method="get" class="mb-4">
    <input type="hidden" name="PageNumber" value="1" />
    <input type="hidden" name="PageSize" value="@Model.CurrentPaginationData.PageSize" />

    <div class="row g-3 align-items-end">
        <div class="col-md-4">
            <label for="SearchString" class="form-label">Product Name</label>
            <input type="text" id="SearchString" name="SearchString" value="@Model.CurrentFilter.SearchString" class="form-control" placeholder="Search by name..." />
        </div>
        <div class="col-md-2">
            <label for="IsActive" class="form-label">Status</label>
            <select id="IsActive" name="IsActive" class="form-select">
                <option value="">All</option>
                <option value="true" selected="@(Model.CurrentFilter.IsActive)">Active</option>
                <option value="false" selected="@(!Model.CurrentFilter.IsActive)">Inactive</option>
            </select>
        </div>
        <div class="col-md-2">
            <label for="MinPrice" class="form-label">Min Price</label>
            <input type="number" step="0.01" id="MinPrice" name="MinPrice" value="@Model.CurrentFilter.MinPrice" class="form-control" />
        </div>
        <div class="col-md-2">
            <label for="MaxPrice" class="form-label">Max Price</label>
            <input type="number" step="0.01" id="MaxPrice" name="MaxPrice" value="@Model.CurrentFilter.MaxPrice" class="form-control" />
        </div>
    </div>
    <div class="row g-3 align-items-end mt-2">
        <div class="col-md-2">
            <label for="MinStock" class="form-label">Min Stock</label>
            <input type="number" id="MinStock" name="MinStock" value="@Model.CurrentFilter.MinStock" class="form-control" />
        </div>
        <div class="col-md-2">
            <label for="MaxStock" class="form-label">Max Stock</label>
            <input type="number" id="MaxStock" name="MaxStock" value="@Model.CurrentFilter.MaxStock" class="form-control" />
        </div>
        <div class="col-md-auto">
            <button type="submit" class="btn btn-primary">Filter</button>
            <a asp-action="Index" class="btn btn-outline-secondary">Clear Filters</a>
        </div>
    </div>
</form>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Stock</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Products.Items.Any())
        {
            @foreach (var item in Model.Products.Items)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td>@Html.DisplayFor(modelItem => item.Description)</td>
                    <td>@Html.DisplayFor(modelItem => item.Price)</td>
                    <td>@Html.DisplayFor(modelItem => item.Stock)</td>
                    <td>
                        @if (item.IsActive)
                        {
                            <span class="badge bg-success">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">Inactive</span>
                        }
                    </td>
                    <td>
                        <a asp-action="Update" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="6" class="text-center">No products found matching your criteria.</td>
            </tr>
        }
    </tbody>
</table>

@if (Model.Products.TotalItems > 0)
{
    <div class="row">
        <div class="col-md-6">
            <p>
                Showing @(Model.Products.Items.Count) item(s) on this page (Page @(Model.Products.PageNumber) of @(Model.Products.TotalPages)).
                Total @(Model.Products.TotalItems) item(s) found.
            </p>
        </div>
        <div class="col-md-6">
            <nav aria-label="Product navigation">
                <ul class="pagination justify-content-end">
                    @* Previous Page Link *@
                    @if (Model.Products.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-SearchString="@Model.CurrentFilter.SearchString"
                               asp-route-IsActive="@Model.CurrentFilter.IsActive"
                               asp-route-MinPrice="@Model.CurrentFilter.MinPrice"
                               asp-route-MaxPrice="@Model.CurrentFilter.MaxPrice"
                               asp-route-MinStock="@Model.CurrentFilter.MinStock"
                               asp-route-MaxStock="@Model.CurrentFilter.MaxStock"
                               asp-route-PageNumber="(@Model.CurrentPaginationData.PageNumber - 1)"
                               asp-route-PageSize="@Model.CurrentPaginationData.PageSize">Previous</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled"><span class="page-link">Previous</span></li>
                    }

                    @for (int i = 1; i <= Model.Products.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.Products.PageNumber ? "active" : "")">
                            <a class="page-link" asp-action="Index"
                               asp-route-SearchString="@Model.CurrentFilter.SearchString"
                               asp-route-IsActive="@Model.CurrentFilter.IsActive"
                               asp-route-MinPrice="@Model.CurrentFilter.MinPrice"
                               asp-route-MaxPrice="@Model.CurrentFilter.MaxPrice"
                               asp-route-MinStock="@Model.CurrentFilter.MinStock"
                               asp-route-MaxStock="@Model.CurrentFilter.MaxStock"
                               asp-route-PageNumber="@i"
                               asp-route-PageSize="@Model.CurrentPaginationData.PageSize">@i</a>
                        </li>
                    }

                    @if (Model.Products.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index"
                               asp-route-SearchString="@Model.CurrentFilter.SearchString"
                               asp-route-IsActive="@Model.CurrentFilter.IsActive"
                               asp-route-MinPrice="@Model.CurrentFilter.MinPrice"
                               asp-route-MaxPrice="@Model.CurrentFilter.MaxPrice"
                               asp-route-MinStock="@Model.CurrentFilter.MinStock"
                               asp-route-MaxStock="@Model.CurrentFilter.MaxStock"
                               asp-route-PageNumber="@(Model.CurrentPaginationData.PageNumber + 1)"
                               asp-route-PageSize="@Model.CurrentPaginationData.PageSize">Next</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled"><span class="page-link">Next</span></li>
                    }
                </ul>
            </nav>
        </div>
    </div>
}